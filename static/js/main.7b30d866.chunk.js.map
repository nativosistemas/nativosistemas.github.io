{"version":3,"sources":["logo.svg","App.js","AppPruebaJSX.js","pages/Home.jsx","pages/Info.jsx","pages/Contacto.jsx","pages/PageNotFound.jsx","components/Footer.jsx","AppRouter.js","components/Main.jsx","AppMain.js","serviceWorker.js","index.js"],"names":["module","exports","App","Component","Home","Info","props","state","articulos","fetch","then","response","json","art","setState","border","this","map","key","codigo","descripcion","precio","Contacto","PageNotFound","Footer","href","target","rel","Main","src","logo","alt","className","class","to","exact","path","component","AppMain","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,8MCyB5BC,I,gCCtBYC,Y,aCIZC,EALF,kBACX,oCACE,8GC+CWC,E,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,IAHI,E,iEAOG,IAAD,OACnBC,MAAM,yCACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEN,UAAWK,S,+BAK/B,OAEE,6BACE,2BAAOE,OAAO,KACd,+BACE,4BACE,4CACA,8CACA,wCAGJ,+BACGC,KAAKT,MAAMC,UAAUS,KAAI,SAAAJ,GACxB,OACE,wBAAIK,IAAKL,EAAIM,QACX,4BAAKN,EAAIM,QACT,4BAAKN,EAAIO,aACT,4BAAKP,EAAIQ,mB,GApCNlB,aCMJmB,EANE,kBACf,oCACE,8HACA,yDCIWC,EAPM,kBACnB,oCACE,8FCMWC,GCASrB,Y,MDRT,kBACb,oCACE,gCAAQ,uBACFsB,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAHF,8BEiCGC,EA5BF,kBACT,oCACQ,gCAAQ,yBAAKC,IAAKC,IAAMC,IAAI,iBAAiBC,UAAU,gBACvD,kBAAC,IAAD,KACI,6BACI,wBAAIC,MAAM,cACN,4BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,WACJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,SAAT,mBACJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,aAAT,eAGZ,iCACI,yBAAKF,UAAU,cACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAWjC,IACjC,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,QAAQC,UAAWhC,IACrC,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,YAAYC,UAAWf,IACzC,kBAAC,IAAD,CAAOe,UAAWd,QAKlC,kBAAC,EAAD,QCVGe,E,uKAVP,OACI,oCACI,8BACI,kBAAC,EAAD,Y,GANEnC,aCCFoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCJNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzC,MAAK,SAAA0C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7b30d866.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ed093ce6.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          ¡Hola Mundo!.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"http://www.nativosistemas.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Nativo Sistemas\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass AppPruebaJSX extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articulos: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    fetch('http://scratchya.com.ar/vue/datos.php')\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((art) => {\r\n        this.setState({ articulos: art })\r\n      })    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Código v2</th>\r\n            <th>Descripción</th>\r\n            <th>Precio</th>                    \r\n          </tr>\r\n        </thead>\r\n        <tbody>  \r\n          {this.state.articulos.map(art => {\r\n            return (\r\n              <tr key={art.codigo}>\r\n                <td>{art.codigo}</td>\r\n                <td>{art.descripcion}</td>\r\n                <td>{art.precio}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n   \r\n}\r\n\r\nexport default AppPruebaJSX;","import React from \"react\";\r\n\r\nconst Home = () => (\r\n  <>\r\n    <p>Bienvenido a Nativo Sistemas, somos una compañia de desarrollo de software</p>\r\n  </>\r\n)\r\nexport default Home","import React, { Component } from \"react\";\r\n\r\nclass Info extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articulos: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    fetch('http://scratchya.com.ar/vue/datos.php')\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((art) => {\r\n        this.setState({ articulos: art })\r\n      })    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n   \r\n      <div>\r\n        <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Código v2</th>\r\n            <th>Descripción</th>\r\n            <th>Precio</th>                    \r\n          </tr>\r\n        </thead>\r\n        <tbody>  \r\n          {this.state.articulos.map(art => {\r\n            return (\r\n              <tr key={art.codigo}>\r\n                <td>{art.codigo}</td>\r\n                <td>{art.descripcion}</td>\r\n                <td>{art.precio}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n     \r\n    );\r\n  }\r\n   \r\n}\r\n\r\nexport default Info","import React from \"react\"\r\n\r\nconst Contacto = () => (\r\n  <>\r\n    <p>Estas en la pagina de contacto. Aqui encontraras información para contactar a la compañia</p>\r\n    <p>Telefono: 0341-153340199</p>\r\n  </>\r\n)\r\nexport default Contacto","import React from \"react\"\r\n\r\nconst PageNotFound = () => (\r\n  <>\r\n    <p>Uy, llegaste a un mundo desconocido. Mejor regresa al inicio.</p>\r\n\r\n  </>\r\n)\r\n\r\nexport default PageNotFound","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <>\r\n    <footer><a\r\n          href=\"http://www.nativosistemas.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"  >www.nativosistemas.com</a></footer>\r\n  </>\r\n)\r\nexport default Footer\r\n","import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport logo from './logo.svg';\r\nimport Home from \"./pages/Home\"\r\nimport Info from \"./pages/Info\"\r\nimport Contacto from \"./pages/Contacto\"\r\nimport PageNotFound from \"./pages/PageNotFound\"\r\n\r\nclass AppRouter extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"App-main\">\r\n        <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </header>\r\n\r\n        <Router>\r\n          <ul className=\"nav-container s-border s-main-center s-pl-0\">\r\n            \r\n            <li className=\"nav-container--item s-mr-2\">\r\n            <Link to=\"/\">Inicio</Link></li>\r\n            \r\n            <li className=\"nav-container--item s-mr-2\">\r\n            <Link to=\"/info\">Info</Link></li>\r\n            \r\n            <li className=\"nav-container--item\">\r\n            <Link to=\"/contacto\">Contactanos</Link></li>\r\n          </ul>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/info\" component={Info}/>\r\n            <Route exact path=\"/contacto\" component={Contacto}/>\r\n            <Route component={PageNotFound}/>\r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport logo from '../logo.svg';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport Home from \"../pages/Home\"\r\nimport Info from \"../pages/Info\"\r\nimport Contacto from \"../pages/Contacto\"\r\nimport PageNotFound from \"../pages/PageNotFound\"\r\nimport Footer from \"./Footer\"  \r\n\r\nconst Main = () => (\r\n    <>\r\n            <header><img src={logo} alt=\"NativoSistemas\" className=\"headerLogo\"></img></header>\r\n            <Router>\r\n                <nav>\r\n                    <ul class=\"horizontal\">\r\n                        <li>\r\n                            <Link to=\"/\">Inicio</Link></li>\r\n                        <li>\r\n                            <Link to=\"/info\">Sobre nosotros</Link></li>\r\n                        <li>\r\n                            <Link to=\"/contacto\">Contacto</Link></li>\r\n                    </ul>\r\n                </nav>\r\n                <section>\r\n                    <div className=\"divSection\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route exact path=\"/info\" component={Info} />\r\n                            <Route exact path=\"/contacto\" component={Contacto} />\r\n                            <Route component={PageNotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                </section>\r\n            </Router>\r\n            <Footer></Footer>\r\n    </>\r\n)\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport './Main.css';\r\nimport logo from './logo.svg';\r\nimport Home from \"./pages/Home\"\r\nimport Info from \"./pages/Info\"\r\nimport Contacto from \"./pages/Contacto\"\r\nimport PageNotFound from \"./pages/PageNotFound\"\r\nimport Main from \"./components/Main\"\r\n\r\nclass AppMain extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <main>\r\n                    <Main></Main>\r\n                </main>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppMain;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport AppPruebaJSX from './AppPruebaJSX';\nimport AppRouter from './AppRouter';\nimport AppMain from './AppMain';\nimport Home from \"./pages/Home\";\nimport Info from \"./pages/Info\";\nimport Contacto from \"./pages/Contacto\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppMain />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}